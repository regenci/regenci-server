datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model User {
  id                String          @id @default(uuid())
  first_name        String
  last_name         String
  email_address     String          @unique
  password          String
  verification_code Int?
  profile_picture   String?
  current_template  String?
  used_templates    UsedTemplates[]
  Resume            Resume?         @relation(fields: [resume_id], references: [id], onDelete: Cascade)
  updated_at        DateTime        @updatedAt
  created_at        DateTime        @default(now())
  is_admin          Boolean         @default(false)
  is_verified       Boolean         @default(false)
  resume_id         String?
}

model UsedTemplates {
  id           String  @id @default(uuid())
  templated_id String
  User         User?   @relation(fields: [user_id], references: [id])
  user_id      String?
}

model Resume {
  id                   String       @id @default(uuid())
  email_address        String?
  first_name           String?
  last_name            String?
  profile_picture      String?
  job_title            String?
  phone_number         String?
  full_address         String?
  professional_summary String?
  date_of_birth        DateTime?
  education            Education[]
  experience           Experience[]
  languages            Language[]
  skills               Skill[]
  links                Link[]
  hobbies              Hobby[]
  references           Reference[]
  User                 User[]
}

model Education {
  id                     String   @id @default(uuid())
  institution_name       String
  institution_degree     String
  institution_start_date DateTime
  institution_end_date   DateTime
  Resume                 Resume?  @relation(fields: [resume_id], references: [id], onDelete: Cascade)
  resume_id              String?
}

model Experience {
  id                     String   @id @default(uuid())
  experience_company     String
  experience_job_title   String
  experience_start_date  DateTime
  experience_end_date    DateTime
  experience_description String?
  Resume                 Resume?  @relation(fields: [resume_id], references: [id], onDelete: Cascade)
  resume_id              String?
}

model Language {
  id             String  @id @default(uuid())
  language_title String
  language_level Int     @default(0)
  Resume         Resume? @relation(fields: [resume_id], references: [id], onDelete: Cascade)
  resume_id      String?
}

model Skill {
  id          String  @id @default(uuid())
  skill_title String
  skill_level Int?    @default(0)
  Resume      Resume? @relation(fields: [resume_id], references: [id], onDelete: Cascade)
  resume_id   String?
}

model Link {
  id         String  @id @default(uuid())
  link_title String
  link_url   String
  Resume     Resume? @relation(fields: [resume_id], references: [id], onDelete: Cascade)
  resume_id  String?
}

model Hobby {
  id          String  @id @default(uuid())
  hobby_title String
  Resume      Resume? @relation(fields: [resume_id], references: [id], onDelete: Cascade)
  resume_id   String?
}

model Reference {
  id                     String  @id @default(uuid())
  referent_full_name     String
  referent_company_name  String
  referent_phone_number  String
  referent_email_address String
  Resume                 Resume? @relation(fields: [resume_id], references: [id], onDelete: Cascade)
  resume_id              String?
}

// A resume template (part of admin dashboard)
model Template {
  id                String   @id @default(uuid())
  title             String
  preview_image_url String
  jsx_code          String
  author_id         String
  use_count         Int      @default(0)
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
}
